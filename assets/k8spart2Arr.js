export const k8spart2Arr = [
  [
    "What are the two primary node types in a Kubernetes cluster?",
    ["Worker nodes and Control Plane nodes", "t"],
    ["Master nodes and Slave nodes", "f"],
    ["Primary nodes and Secondary nodes", "f"],
    ["Active nodes and Passive nodes", "f"],
    "A Kubernetes cluster is made up of two primary node types: worker nodes and Control Plane nodes.",
  ],
  [
    "What is the role of worker nodes in a Kubernetes cluster?",
    ["To run containerized workloads", "t"],
    ["To manage the cluster state", "f"],
    ["To provide centralized APIs and internal services", "f"],
    ["To store cluster state in an etcd key-value store", "f"],
    "Worker nodes in a Kubernetes cluster run containerized workloads.",
  ],
  [
    "What is the role of Control Plane nodes in a Kubernetes cluster?",
    [
      "To provide centralized APIs and internal services for cluster management",
      "t",
    ],
    ["To run containerized workloads", "f"],
    [
      "To act as the point of contact between worker nodes and the Control Plane",
      "f",
    ],
    ["To handle traffic to and from services", "f"],
    "Control Plane nodes provide centralized APIs and internal services for cluster management.",
  ],
  [
    "What is the role of the kubelet process in a Kubernetes worker node?",
    [
      "To monitor the worker node and act as the point of contact between the node and the Control Plane",
      "t",
    ],
    ["To store cluster state in an etcd key-value store", "f"],
    [
      "To provide centralized APIs and internal services for cluster management",
      "f",
    ],
    ["To run containerized workloads", "f"],
    "The kubelet process monitors the worker node and acts as the point of contact between that node and the Control Plane.",
  ],
  [
    "What is a pod in Kubernetes?",
    [
      "A self-contained, easily replicable object comprising one or more containers that share storage and a network IP address",
      "t",
    ],
    ["A process that runs on each worker node", "f"],
    ["A centralized API for managing the cluster", "f"],
    ["A key-value store for maintaining cluster state", "f"],
    "A pod in Kubernetes is a self-contained, easily replicable object comprising one or more containers that share storage and a network IP address.",
  ],
  [
    "Which Kubernetes add-on collects resource usage statistics from the kubelet on each node?",
    ["Metrics Server", "t"],
    ["kube-state-metrics", "f"],
    ["Heapster", "f"],
    ["Prometheus", "f"],
    "Metrics Server collects resource usage statistics from the kubelet on each node and provides aggregated metrics through the Metrics API.",
  ],
  [
    "Which Kubernetes add-on listens to the Control Plane API server for data on the overall status of Kubernetes objects?",
    ["kube-state-metrics", "t"],
    ["Metrics Server", "f"],
    ["Heapster", "f"],
    ["Prometheus", "f"],
    "kube-state-metrics listens to the Control Plane API server for data on the overall status of Kubernetes objects and generates metrics from that data that are available through the Metrics API.",
  ],
  [
    "Which cluster state metric provides a high-level overview of a node's health and whether the scheduler can place pods on that node?",
    ["Node status", "t"],
    ["MemoryPressure", "f"],
    ["DiskPressure", "f"],
    ["PIDPressure", "f"],
    "Node status provides a high-level overview of a node's health and whether the scheduler can place pods on that node.",
  ],
  [
    "Which Kubernetes condition signals that a node has insufficient available memory to run new pods?",
    ["MemoryPressure", "t"],
    ["DiskPressure", "f"],
    ["PIDPressure", "f"],
    ["Node status", "f"],
    "MemoryPressure is a Kubernetes condition that signals that a node has insufficient available memory to run new pods.",
  ],
  [
    "Which Kubernetes condition signals that a node has insufficient available disk space to run new pods?",
    ["DiskPressure", "t"],
    ["MemoryPressure", "f"],
    ["PIDPressure", "f"],
    ["Node status", "f"],
    "DiskPressure is a Kubernetes condition that signals that a node has insufficient available disk space to run new pods.",
  ],
  [
    "Which Kubernetes condition signals that a node has insufficient available PIDs to run new pods?",
    ["PIDPressure", "t"],
    ["MemoryPressure", "f"],
    ["DiskPressure", "f"],
    ["Node status", "f"],
    "PIDPressure is a Kubernetes condition that signals that a node has insufficient available PIDs to run new pods.",
  ],
  [
    "What is the role of kube-proxy in a Kubernetes cluster?",
    ["To handle traffic to and from services", "t"],
    [
      "To provide centralized APIs and internal services for cluster management",
      "f",
    ],
    ["To run containerized workloads", "f"],
    ["To store cluster state in an etcd key-value store", "f"],
    "kube-proxy in a Kubernetes cluster handles traffic to and from services.",
  ],
  [
    "What is the role of the etcd datastore in a Kubernetes cluster?",
    ["To store cluster state in a key-value store", "t"],
    ["To run containerized workloads", "f"],
    [
      "To provide centralized APIs and internal services for cluster management",
      "f",
    ],
    ["To handle traffic to and from services", "f"],
    "The etcd datastore in a Kubernetes cluster stores cluster state in a key-value store.",
  ],
  [
    "What is the primary role of the Kubernetes API server?",
    ["To provide a centralized API for managing the cluster", "t"],
    ["To run containerized workloads", "f"],
    ["To handle traffic to and from services", "f"],
    ["To store cluster state in an etcd key-value store", "f"],
    "The primary role of the Kubernetes API server is to provide a centralized API for managing the cluster.",
  ],
  [
    "What is the role of the Kubernetes controller-manager in a Control Plane node?",
    ["To manage the lifecycle of various controllers", "t"],
    ["To run containerized workloads", "f"],
    ["To provide a centralized API for managing the cluster", "f"],
    ["To store cluster state in an etcd key-value store", "f"],
    "The Kubernetes controller-manager manages the lifecycle of various controllers on a Control Plane node.",
  ],
  [
    "What is the role of the Kubernetes scheduler in a Control Plane node?",
    ["To assign pods to worker nodes", "t"],
    ["To run containerized workloads", "f"],
    ["To provide a centralized API for managing the cluster", "f"],
    ["To store cluster state in an etcd key-value store", "f"],
    "The Kubernetes scheduler assigns pods to worker nodes on a Control Plane node.",
  ],
  [
    "What is the default container runtime used by Kubernetes?",
    ["Docker", "t"],
    ["containerd", "f"],
    ["CRI-O", "f"],
    ["rkt", "f"],
    "Docker is the default container runtime used by Kubernetes.",
  ],
  [
    "Which Kubernetes feature allows you to define a desired state for your application and automatically manages the underlying pods?",
    ["Deployments", "t"],
    ["ReplicaSets", "f"],
    ["StatefulSets", "f"],
    ["DaemonSets", "f"],
    "Deployments in Kubernetes allow you to define a desired state for your application and automatically manage the underlying pods.",
  ],
  [
    "Which Kubernetes feature is designed to manage stateful applications with stable network identities?",
    ["StatefulSets", "t"],
    ["Deployments", "f"],
    ["ReplicaSets", "f"],
    ["DaemonSets", "f"],
    "StatefulSets in Kubernetes are designed to manage stateful applications with stable network identities.",
  ],
  [
    "Which Kubernetes feature ensures that a specified number of pod replicas are running at any given time?",
    ["ReplicaSets", "t"],
    ["Deployments", "f"],
    ["StatefulSets", "f"],
    ["DaemonSets", "f"],
    "ReplicaSets in Kubernetes ensure that a specified number of pod replicas are running at any given time.",
  ],
  [
    "Which Kubernetes feature runs a single pod on every node in the cluster?",
    ["DaemonSets", "t"],
    ["Deployments", "f"],
    ["ReplicaSets", "f"],
    ["StatefulSets", "f"],
    "DaemonSets in Kubernetes run a single pod on every node in the cluster.",
  ],
  [
    "What is the primary function of Kubernetes services?",
    ["To provide a stable IP address and DNS name for a group of pods", "t"],
    ["To manage the lifecycle of various controllers", "f"],
    ["To assign pods to worker nodes", "f"],
    ["To store cluster state in a key-value store", "f"],
    "The primary function of Kubernetes services is to provide a stable IP address and DNS name for a group of pods.",
  ],
  [
    "Which Kubernetes service type exposes a service on each node's IP at a static port?",
    ["NodePort", "t"],
    ["ClusterIP", "f"],
    ["LoadBalancer", "f"],
    ["ExternalName", "f"],
    "NodePort is a Kubernetes service type that exposes a service on each node's IP at a static port.",
  ],
  [
    "Which Kubernetes service type exposes a service using an external load balancer?",
    ["LoadBalancer", "t"],
    ["ClusterIP", "f"],
    ["NodePort", "f"],
    ["ExternalName", "f"],
    "LoadBalancer is a Kubernetes service type that exposes a service using an external load balancer.",
  ],
  [
    "Which Kubernetes service type exposes a service only within the cluster?",
    ["ClusterIP", "t"],
    ["NodePort", "f"],
    ["LoadBalancer", "f"],
    ["ExternalName", "f"],
    "ClusterIP is a Kubernetes service type that exposes a service only within the cluster.",
  ],
  [
    "Which Kubernetes service type allows you to map a service to a CNAME record?",
    ["ExternalName", "t"],
    ["ClusterIP", "f"],
    ["NodePort", "f"],
    ["LoadBalancer", "f"],
    "ExternalName is a Kubernetes service type that allows you to map a service to a CNAME record.",
  ],
  [
    "Which Kubernetes feature allows you to automatically scale the number of pod replicas based on resource usage?",
    ["Horizontal Pod Autoscaler", "t"],
    ["Vertical Pod Autoscaler", "f"],
    ["Cluster Autoscaler", "f"],
    ["Manual Scaling", "f"],
    "Horizontal Pod Autoscaler in Kubernetes allows you to automatically scale the number of pod replicas based on resource usage.",
  ],
  [
    "Which Kubernetes feature automatically adjusts the CPU and memory requests and limits of running pods?",
    ["Vertical Pod Autoscaler", "t"],
    ["Horizontal Pod Autoscaler", "f"],
    ["Cluster Autoscaler", "f"],
    ["Manual Scaling", "f"],
    "Vertical Pod Autoscaler in Kubernetes automatically adjusts the CPU and memory requests and limits of running pods.",
  ],
  [
    "Which Kubernetes feature adjusts the size of the cluster based on the overall resource usage?",
    ["Cluster Autoscaler", "t"],
    ["Horizontal Pod Autoscaler", "f"],
    ["Vertical Pod Autoscaler", "f"],
    ["Manual Scaling", "f"],
    "Cluster Autoscaler in Kubernetes adjusts the size of the cluster based on the overall resource usage.",
  ],
  [
    "What is a Kubernetes ConfigMap?",
    [
      "A mechanism for storing non-sensitive configuration data in key-value pairs",
      "t",
    ],
    ["A feature that automatically scales the number of pod replicas", "f"],
    ["A centralized API for managing the cluster", "f"],
    ["A way to expose services on each node's IP at a static port", "f"],
    "A Kubernetes ConfigMap is a mechanism for storing non-sensitive configuration data in key-value pairs.",
  ],
  [
    "What is a Kubernetes Secret?",
    ["A mechanism for storing sensitive data like passwords and API keys", "t"],
    [
      "A feature that automatically adjusts the CPU and memory requests of running pods",
      "f",
    ],
    ["A centralized API for managing the cluster", "f"],
    ["A way to expose services using an external load balancer", "f"],
    "A Kubernetes Secret is a mechanism for storing sensitive data like passwords and API keys.",
  ],
  [
    "What is the Kubernetes Ingress resource?",
    ["A way to manage external access to services within a cluster", "t"],
    ["A mechanism for storing non-sensitive configuration data", "f"],
    [
      "A feature that adjusts the size of the cluster based on resource usage",
      "f",
    ],
    ["A way to expose services only within the cluster", "f"],
    "The Kubernetes Ingress resource is a way to manage external access to services within a cluster.",
  ],
  [
    "What is a Kubernetes Persistent Volume (PV)?",
    [
      "A piece of storage in a cluster that can be consumed by applications",
      "t",
    ],
    ["A feature that automatically scales the number of pod replicas", "f"],
    ["A mechanism for storing sensitive data", "f"],
    ["A way to expose services on each node's IP at a static port", "f"],
    "A Kubernetes Persistent Volume (PV) is a piece of storage in a cluster that can be consumed by applications.",
  ],
  [
    "What is a Kubernetes Persistent Volume Claim (PVC)?",
    [
      "A request for storage by a user that can be fulfilled by a Persistent Volume",
      "t",
    ],
    [
      "A feature that adjusts the size of the cluster based on resource usage",
      "f",
    ],
    ["A mechanism for storing non-sensitive configuration data", "f"],
    ["A way to expose services using an external load balancer", "f"],
    "A Kubernetes Persistent Volume Claim (PVC) is a request for storage by a user that can be fulfilled by a Persistent Volume.",
  ],
  [
    "What is a Kubernetes Custom Resource Definition (CRD)?",
    ["A way to extend the Kubernetes API with custom resources", "t"],
    [
      "A feature that automatically adjusts the CPU and memory requests of running pods",
      "f",
    ],
    ["A mechanism for storing sensitive data", "f"],
    ["A way to expose services only within the cluster", "f"],
    "A Kubernetes Custom Resource Definition (CRD) is a way to extend the Kubernetes API with custom resources.",
  ],
  [
    "What is a Kubernetes Namespace?",
    [
      "A virtual cluster within a Kubernetes cluster that provides isolation and organization",
      "t",
    ],
    ["A feature that automatically scales the number of pod replicas", "f"],
    ["A mechanism for storing non-sensitive configuration data", "f"],
    ["A way to expose services on each node's IP at a static port", "f"],
    "A Kubernetes Namespace is a virtual cluster within a Kubernetes cluster that provides isolation and organization.",
  ],
  [
    "Which Kubernetes command is used to apply a configuration file to create or update resources?",
    ["kubectl apply", "t"],
    ["kubectl create", "f"],
    ["kubectl update", "f"],
    ["kubectl get", "f"],
    'The "kubectl apply" command is used to apply a configuration file to create or update resources in Kubernetes.',
  ],
  [
    "Which Kubernetes command is used to delete resources specified in a configuration file?",
    ["kubectl delete", "t"],
    ["kubectl apply", "f"],
    ["kubectl update", "f"],
    ["kubectl get", "f"],
    'The "kubectl delete" command is used to delete resources specified in a configuration file in Kubernetes.',
  ],
  [
    "Which Kubernetes command is used to get the current status of one or more resources?",
    ["kubectl get", "t"],
    ["kubectl apply", "f"],
    ["kubectl update", "f"],
    ["kubectl delete", "f"],
    'The "kubectl get" command is used to get the current status of one or more resources in Kubernetes.',
  ],
  [
    "Which Kubernetes command is used to display detailed information about a specific resource?",
    ["kubectl describe", "t"],
    ["kubectl apply", "f"],
    ["kubectl update", "f"],
    ["kubectl get", "f"],
    'The "kubectl describe" command is used to display detailed information about a specific resource in Kubernetes.',
  ],
  [
    "Which Kubernetes component is responsible for managing the overall state of the cluster and making decisions about which nodes should run each pod?",
    ["kube-apiserver", "f"],
    ["kube-controller-manager", "f"],
    ["kube-scheduler", "t"],
    ["etcd", "f"],
    "The kube-scheduler is responsible for managing the overall state of the cluster and making decisions about which nodes should run each pod.",
  ],
  [
    "Which Kubernetes component exposes the Kubernetes API and processes REST operations?",
    ["kube-apiserver", "t"],
    ["kube-controller-manager", "f"],
    ["kube-scheduler", "f"],
    ["etcd", "f"],
    "The kube-apiserver exposes the Kubernetes API and processes REST operations.",
  ],
  [
    "Which Kubernetes component is responsible for running controllers that manage the state of the cluster?",
    ["kube-apiserver", "f"],
    ["kube-controller-manager", "t"],
    ["kube-scheduler", "f"],
    ["etcd", "f"],
    "The kube-controller-manager is responsible for running controllers that manage the state of the cluster.",
  ],
  [
    "What is the purpose of a Kubernetes Deployment?",
    ["To create and manage a replicated application", "t"],
    ["To manage the storage available to a cluster", "f"],
    ["To manage network policies for a cluster", "f"],
    ["To schedule Jobs to run at specific times", "f"],
    "A Kubernetes Deployment is used to create and manage a replicated application.",
  ],
  [
    "What is the purpose of a Kubernetes StatefulSet?",
    ["To manage stateless applications", "f"],
    ["To manage stateful applications", "t"],
    ["To manage network policies for a cluster", "f"],
    ["To schedule Jobs to run at specific times", "f"],
    "A Kubernetes StatefulSet is used to manage stateful applications.",
  ],
  [
    "What is the purpose of a Kubernetes DaemonSet?",
    ["To ensure that a specific pod runs on all nodes", "t"],
    ["To manage stateful applications", "f"],
    ["To manage network policies for a cluster", "f"],
    ["To schedule Jobs to run at specific times", "f"],
    "A Kubernetes DaemonSet is used to ensure that a specific pod runs on all nodes within a cluster.",
  ],
  [
    "What is the purpose of a Kubernetes Job?",
    ["To create and manage a replicated application", "f"],
    ["To manage the storage available to a cluster", "f"],
    ["To manage network policies for a cluster", "f"],
    ["To create one or more pods that run to completion", "t"],
    "A Kubernetes Job is used to create one or more pods that run to completion.",
  ],
  [
    "What is the purpose of a Kubernetes CronJob?",
    ["To create and manage a replicated application", "f"],
    ["To manage the storage available to a cluster", "f"],
    ["To manage network policies for a cluster", "f"],
    ["To schedule Jobs to run at specific times", "t"],
    "A Kubernetes CronJob is used to schedule Jobs to run at specific times.",
  ],
  [
    "What is the purpose of a Kubernetes ConfigMap?",
    ["To store non-sensitive configuration data", "t"],
    ["To store sensitive data", "f"],
    ["To manage network policies for a cluster", "f"],
    ["To schedule Jobs to run at specific times", "f"],
    "A Kubernetes ConfigMap is used to store non-sensitive configuration data.",
  ],
  [
    "What is the purpose of a Kubernetes Secret?",
    ["To store non-sensitive configuration data", "f"],
    ["To store sensitive data", "t"],
    ["To manage network policies for a cluster", "f"],
    ["To schedule Jobs to run at specific times", "f"],
    "A Kubernetes Secret is used to store sensitive data, such as passwords and tokens.",
  ],
  [
    "What is a critical metric to monitor for Kubernetes cluster performance?",
    ["Memory utilization", "t"],
    ["Number of nodes", "f"],
    ["Number of users", "f"],
    ["CPU frequency", "f"],
    "Memory utilization at the pod and node level is a critical metric to monitor for optimal cluster performance.",
  ],
  [
    "What can happen when a pod's memory usage exceeds its limits?",
    ["It gets more resources", "f"],
    ["It gets terminated", "t"],
    ["It gets paused", "f"],
    ["It gets moved to another node", "f"],
    "When a pod's memory usage exceeds its limits, it will be terminated.",
  ],
  [
    "What does the kubelet do when it detects low available memory on a node?",
    ["Increases memory", "f"],
    ["Flags the node as under memory pressure", "t"],
    ["Terminates all pods on the node", "f"],
    ["Does nothing", "f"],
    "When the kubelet detects low available memory on a node, it flags the node as under memory pressure and begins to reclaim resources.",
  ],
  [
    "What does the kubelet do to reclaim memory?",
    ["Increases memory capacity", "f"],
    ["Decreases memory usage", "f"],
    ["Evicts pods", "t"],
    ["Pauses pods", "f"],
    "To reclaim memory, the kubelet can evict pods, meaning it will delete these pods from the node.",
  ],
  [
    "What can indicate that pods are not configured appropriately?",
    ["Regularly exceeding requests", "t"],
    ["Stable memory utilization", "f"],
    ["Low CPU utilization", "f"],
    ["Equal memory requests and limits", "f"],
    "Habitually exceeding requests could indicate that your pods are not configured appropriately.",
  ],
  [
    "What should you monitor to determine when to scale your Kubernetes cluster?",
    ["Overall memory utilization on your nodes", "t"],
    ["Number of users", "f"],
    ["Number of deployments", "f"],
    ["Number of services", "f"],
    "Monitoring overall memory utilization on your nodes can help you determine when you need to scale your cluster.",
  ],
  [
    "What is the difference between memory requests and allocatable memory in a Kubernetes node?",
    ["They are the same", "f"],
    [
      "Requests are the minimum amount of memory, and allocatable memory is the available memory for pods",
      "t",
    ],
    [
      "Requests are the maximum amount of memory, and allocatable memory is the total memory",
      "f",
    ],
    [
      "Requests are the available memory for pods, and allocatable memory is the minimum amount of memory",
      "f",
    ],
    "Memory requests are the minimum amounts of memory a node's kubelet will assign to a container, while allocatable memory reflects the amount of memory on a node that is available for pods.",
  ],
  [
    "What happens if a node doesn't have enough allocatable memory to satisfy the sum of the requests of all the pods running on it?",
    ["The node will crash", "f"],
    ["The node will not be selected for scheduling new pods", "t"],
    ["The node will increase its memory capacity", "f"],
    ["The node will decrease its memory usage", "f"],
    "If a node doesn't have enough allocatable memory to satisfy the sum of the requests of all the pods running on it, the Control Plane will not be able to schedule new pods on that node.",
  ],
  [
    "What is the purpose of a ReplicaSet in Kubernetes?",
    [
      "Ensure that a specified number of replicas of a pod are running at all times",
      "t",
    ],
    ["Control access to a set of Pods", "f"],
    ["Manage deployments of containerized applications", "f"],
    ["Group multiple containers into a single unit", "f"],
    "A ReplicaSet in Kubernetes ensures that a specified number of replicas of a pod are running at all times.",
  ],
  [
    "What is a DaemonSet in Kubernetes?",
    ["A way to run a Pod on every node in the cluster", "t"],
    ["A group of containers in a single unit", "f"],
    ["A set of Pods managed by a ReplicaSet", "f"],
    ["A configuration object to manage a cluster", "f"],
    "A DaemonSet in Kubernetes is a way to run a Pod on every node in the cluster.",
  ],
  [
    "What is a StatefulSet in Kubernetes?",
    ["A way to manage stateful applications", "t"],
    ["A way to manage stateless applications", "f"],
    ["A group of containers in a single unit", "f"],
    ["A set of Pods managed by a ReplicaSet", "f"],
    "A StatefulSet in Kubernetes is a way to manage stateful applications that require stable network identities and persistent storage.",
  ],
  [
    "What is the main function of a Kubernetes Service?",
    ["To enable network access to a set of Pods", "t"],
    ["To manage the lifecycle of containerized applications", "f"],
    [
      "To ensure that a specified number of replicas of a pod are running at all times",
      "f",
    ],
    ["To run a Pod on every node in the cluster", "f"],
    "A Kubernetes Service enables network access to a set of Pods and is the primary way to communicate with applications running in the cluster.",
  ],
  [
    "What does a Horizontal Pod Autoscaler do in Kubernetes?",
    ["Automatically scales the number of Pods based on CPU utilization", "t"],
    ["Manages stateful applications", "f"],
    ["Manages stateless applications", "f"],
    ["Runs a Pod on every node in the cluster", "f"],
    "A Horizontal Pod Autoscaler in Kubernetes automatically scales the number of Pods in a ReplicaSet, Deployment, or StatefulSet based on observed CPU utilization (or other custom metrics).",
  ],
  [
    "What does the Kubernetes Control Plane do?",
    ["Manages the overall state of the cluster", "t"],
    ["Runs applications on the cluster", "f"],
    ["Manages the networking of the cluster", "f"],
    ["Scales the number of Pods in a ReplicaSet", "f"],
    "The Kubernetes Control Plane manages the overall state of the cluster, including the API server, etcd storage, and controller manager.",
  ],
  [
    "What is the role of the Kubernetes API server?",
    ["Expose the Kubernetes API", "t"],
    ["Run containerized applications", "f"],
    ["Manage the overall state of the cluster", "f"],
    ["Automatically scale the number of Pods", "f"],
    "The role of the Kubernetes API server is to expose the Kubernetes API and act as the front end for the Control Plane.",
  ],
  [
    "What is the role of etcd in a Kubernetes cluster?",
    ["Store configuration data for the cluster", "t"],
    ["Run containerized applications", "f"],
    ["Manage the overall state of the cluster", "f"],
    ["Automatically scale the number of Pods", "f"],
    "The role of etcd in a Kubernetes cluster is to store configuration data for the cluster.",
  ],
  [
    "What is the role of the Kubernetes controller manager?",
    ["Run controller processes", "t"],
    ["Run containerized applications", "f"],
    ["Manage the overall state of the cluster", "f"],
    ["Automatically scale the number of Pods", "f"],
    "The role of the Kubernetes controller manager is to run controller processes, such as the replication controller, endpoints controller, and namespace controller.",
  ],
  [
    "What is the role of the Kubernetes cloud controller manager?",
    ["Integrate the cluster with cloud provider-specific functionality", "t"],
    ["Run containerized applications", "f"],
    ["Manage the overall state of the cluster", "f"],
    ["Automatically scale the number of Pods", "f"],
    "The role of the Kubernetes cloud controller manager is to integrate the cluster with cloud provider-specific functionality, such as managing cloud-provider-specific routes and load balancers.",
  ],
  [
    "What is the role of a Kubernetes node?",
    ["Run workloads and communicate with the Control Plane", "t"],
    ["Manage the overall state of the cluster", "f"],
    ["Expose the Kubernetes API", "f"],
    ["Automatically scale the number of Pods", "f"],
    "The role of a Kubernetes node is to run workloads and communicate with the Control Plane to maintain the desired state of the workloads.",
  ],
  [
    "What is the role of the kubelet in a Kubernetes node?",
    ["Ensure that containers are running in a Pod", "t"],
    ["Run containerized applications", "f"],
    ["Expose the Kubernetes API", "f"],
    ["Automatically scale the number of Pods", "f"],
    "The role of the kubelet in a Kubernetes node is to ensure that containers are running in a Pod and communicate with the Control Plane to maintain the desired state of the workloads.",
  ],
  [
    "What is the role of the kube-proxy in a Kubernetes node?",
    ["Implement part of the Service concept", "t"],
    ["Run containerized applications", "f"],
    ["Expose the Kubernetes API", "f"],
    ["Automatically scale the number of Pods", "f"],
    "The role of the kube-proxy in a Kubernetes node is to implement part of the Service concept by maintaining network rules on the host and performing connection forwarding.",
  ],
  [
    "What is the role of the container runtime in a Kubernetes node?",
    ["Run containers", "t"],
    ["Expose the Kubernetes API", "f"],
    ["Manage the overall state of the cluster", "f"],
    ["Automatically scale the number of Pods", "f"],
    "The role of the container runtime in a Kubernetes node is to run containers, such as Docker, containerd, or CRI-O.",
  ],
  [
    "What is the difference between a Kubernetes Namespace and a Pod?",
    [
      "Namespace is a virtual cluster, and Pod is the smallest unit in Kubernetes",
      "t",
    ],
    ["Namespace is a container runtime, and Pod is a virtual cluster", "f"],
    [
      "Namespace is a way to run a Pod on every node, and Pod is a group of containers",
      "f",
    ],
    [
      "Namespace is the overall state of the cluster, and Pod is the front end for the Control Plane",
      "f",
    ],
    "A Kubernetes Namespace is a virtual cluster that provides a way to divide cluster resources, while a Pod is the smallest and simplest unit in the Kubernetes object model, which represents a single instance of a running process in a cluster.",
  ],
  [
    "What is the purpose of Kubernetes ConfigMaps?",
    ["Store and manage configuration data in key-value pairs", "t"],
    ["Run containerized applications", "f"],
    ["Expose the Kubernetes API", "f"],
    ["Automatically scale the number of Pods", "f"],
    "The purpose of Kubernetes ConfigMaps is to store and manage configuration data in key-value pairs, decoupling configuration from the container image.",
  ],
  [
    "What is the purpose of Kubernetes Secrets?",
    ["Store sensitive information", "t"],
    ["Run containerized applications", "f"],
    ["Expose the Kubernetes API", "f"],
    ["Automatically scale the number of Pods", "f"],
    "The purpose of Kubernetes Secrets is to store sensitive information, such as passwords or API keys, and manage their access within the cluster.",
  ],
  [
    "What is a Kubernetes Ingress?",
    [
      "An API object that manages external access to the services in a cluster",
      "t",
    ],
    ["A container runtime", "f"],
    ["A way to run a Pod on every node", "f"],
    ["A group of containers in a single unit", "f"],
    "A Kubernetes Ingress is an API object that manages external access to the services in a cluster, typically through HTTP or HTTPS.",
  ],
  [
    "What is the Kubernetes Volume?",
    ["A directory accessible to containers in a Pod", "t"],
    ["A container runtime", "f"],
    ["A way to run a Pod on every node", "f"],
    ["A group of containers in a single unit", "f"],
    "A Kubernetes Volume is a directory accessible to containers in a Pod, allowing data to persist across container restarts.",
  ],
  [
    "What is the Kubernetes Persistent Volume (PV)?",
    ["A piece of storage in a cluster", "t"],
    ["A container runtime", "f"],
    ["A way to run a Pod on every node", "f"],
    ["A group of containers in a single unit", "f"],
    "A Kubernetes Persistent Volume (PV) is a piece of storage in a cluster that can be provisioned by an administrator or dynamically provisioned using a StorageClass.",
  ],
  [
    "What is the Kubernetes Persistent Volume Claim (PVC)?",
    ["A request for storage by a user", "t"],
    ["A container runtime", "f"],
    ["A way to run a Pod on every node", "f"],
    ["A group of containers in a single unit", "f"],
    "A Kubernetes Persistent Volume Claim (PVC) is a request for storage by a user, which can be bound to a Persistent Volume (PV) that satisfies the claim's requirements.",
  ],
  [
    "What is the purpose of Kubernetes StorageClasses?",
    ["Define different classes of storage", "t"],
    ["Run containerized applications", "f"],
    ["Expose the Kubernetes API", "f"],
    ["Automatically scale the number of Pods", "f"],
    "The purpose of Kubernetes StorageClasses is to define different classes of storage that can be dynamically provisioned for Persistent Volume Claims (PVCs).",
  ],
  [
    "What is a Kubernetes Custom Resource?",
    ["An extension of the Kubernetes API", "t"],
    ["A container runtime", "f"],
    ["A way to run a Pod on every node", "f"],
    ["A group of containers in a single unit", "f"],
    "A Kubernetes Custom Resource is an extension of the Kubernetes API that allows you to create your own custom objects and manage their lifecycle.",
  ],
  [
    "What is the purpose of Kubernetes Role-Based Access Control (RBAC)?",
    ["Define and enforce access policies in a cluster", "t"],
    ["Run containerized applications", "f"],
    ["Expose the Kubernetes API", "f"],
    ["Automatically scale the number of Pods", "f"],
    "The purpose of Kubernetes Role-Based Access Control (RBAC) is to define and enforce access policies in a cluster, controlling who can access what resources and actions.",
  ],
  [
    "What is the purpose of Kubernetes Network Policies?",
    ["Control traffic flow between Pods", "t"],
    ["Run containerized applications", "f"],
    ["Expose the Kubernetes API", "f"],
    ["Automatically scale the number of Pods", "f"],
    "The purpose of Kubernetes Network Policies is to control traffic flow between Pods, allowing you to define and enforce ingress and egress rules for your applications.",
  ],
  [
    "What is the purpose of Kubernetes Affinity and Anti-Affinity rules?",
    ["Control the placement of Pods in a cluster", "t"],
    ["Run containerized applications", "f"],
    ["Expose the Kubernetes API", "f"],
    ["Automatically scale the number of Pods", "f"],
    "The purpose of Kubernetes Affinity and Anti-Affinity rules is to control the placement of Pods in a cluster, influencing where they are scheduled to run.",
  ],
  [
    "What is the purpose of Kubernetes Taints and Tolerations?",
    ["Control which nodes can run a specific Pod", "t"],
    ["Run containerized applications", "f"],
    ["Expose the Kubernetes API", "f"],
    ["Automatically scale the number of Pods", "f"],
    "The purpose of Kubernetes Taints and Tolerations is to control which nodes can run a specific Pod, allowing you to isolate workloads on specific nodes or groups of nodes.",
  ],
  [
    "What is the purpose of Kubernetes PodDisruptionBudgets?",
    ["Limit the number of Pods that can be evicted at once", "t"],
    ["Run containerized applications", "f"],
    ["Expose the Kubernetes API", "f"],
    ["Automatically scale the number of Pods", "f"],
    "The purpose of Kubernetes PodDisruptionBudgets is to limit the number of Pods that can be evicted at once, ensuring the availability of your applications during voluntary disruptions.",
  ],
  [
    "What is the purpose of Kubernetes Node Selectors?",
    ["Control which nodes a Pod can be scheduled on", "t"],
    ["Run containerized applications", "f"],
    ["Expose the Kubernetes API", "f"],
    ["Automatically scale the number of Pods", "f"],
    "The purpose of Kubernetes Node Selectors is to control which nodes a Pod can be scheduled on, using labels to match the Pod to the appropriate nodes.",
  ],
  [
    "What is the purpose of Kubernetes Readiness Probes?",
    ["Determine when a Pod is ready to receive traffic", "t"],
    ["Run containerized applications", "f"],
    ["Expose the Kubernetes API", "f"],
    ["Automatically scale the number of Pods", "f"],
    "The purpose of Kubernetes Readiness Probes is to determine when a Pod is ready to receive traffic, ensuring that only healthy Pods are used for load balancing.",
  ],
  [
    "What is the purpose of Kubernetes Liveness Probes?",
    ["Determine when a Pod needs to be restarted", "t"],
    ["Run containerized applications", "f"],
    ["Expose the Kubernetes API", "f"],
    ["Automatically scale the number of Pods", "f"],
    "The purpose of Kubernetes Liveness Probes is to determine when a Pod needs to be restarted due to unhealthy conditions, ensuring the availability of your applications.",
  ],
  [
    "What is the purpose of Kubernetes Startup Probes?",
    ["Determine when a Pod has successfully started", "t"],
    ["Run containerized applications", "f"],
    ["Expose the Kubernetes API", "f"],
    ["Automatically scale the number of Pods", "f"],
    "The purpose of Kubernetes Startup Probes is to determine when a Pod has successfully started, allowing the system to transition from startup to readiness and liveness checks.",
  ],
  [
    "What is the purpose of Kubernetes Horizontal Pod Autoscaler (HPA)?",
    ["Automatically scale the number of Pods based on resource usage", "t"],
    ["Run containerized applications", "f"],
    ["Expose the Kubernetes API", "f"],
    ["Control the placement of Pods in a cluster", "f"],
    "The purpose of Kubernetes Horizontal Pod Autoscaler (HPA) is to automatically scale the number of Pods in a Deployment, ReplicaSet, or StatefulSet based on resource usage, such as CPU or memory.",
  ],
  [
    "What is the purpose of Kubernetes Vertical Pod Autoscaler (VPA)?",
    ["Automatically adjust the resource requests of Pods", "t"],
    ["Run containerized applications", "f"],
    ["Expose the Kubernetes API", "f"],
    ["Control the placement of Pods in a cluster", "f"],
    "The purpose of Kubernetes Vertical Pod Autoscaler (VPA) is to automatically adjust the resource requests of Pods, ensuring that they have the appropriate resources for their workloads.",
  ],
  [
    "What is the purpose of Kubernetes Cluster Autoscaler?",
    ["Automatically adjust the size of the node pool", "t"],
    ["Run containerized applications", "f"],
    ["Expose the Kubernetes API", "f"],
    ["Control the placement of Pods in a cluster", "f"],
    "The purpose of Kubernetes Cluster Autoscaler is to automatically adjust the size of the node pool, adding or removing nodes based on the cluster's resource demands.",
  ],
  [
    "What is the difference between a Kubernetes Deployment and a StatefulSet?",
    [
      "Deployment manages stateless apps, and StatefulSet manages stateful apps",
      "t",
    ],
    [
      "Deployment manages stateful apps, and StatefulSet manages stateless apps",
      "f",
    ],
    [
      "Deployment is for short-lived containers, and StatefulSet is for long-running containers",
      "f",
    ],
    [
      "Deployment is for running batch jobs, and StatefulSet is for running services",
      "f",
    ],
    "The difference between a Kubernetes Deployment and a StatefulSet is that Deployment is used to manage stateless applications, while StatefulSet is used to manage stateful applications with stable network identities and persistent storage.",
  ],
  [
    "What is the difference between a Kubernetes ReplicaSet and a ReplicationController?",
    [
      "ReplicaSet supports set-based selectors, and ReplicationController supports equality-based selectors",
      "t",
    ],
    [
      "ReplicaSet supports equality-based selectors, and ReplicationController supports set-based selectors",
      "f",
    ],
    [
      "ReplicaSet is for stateless applications, and ReplicationController is for stateful applications",
      "f",
    ],
    [
      "ReplicaSet is for long-running containers, and ReplicationController is for short-lived containers",
      "f",
    ],
    "The difference between a Kubernetes ReplicaSet and a ReplicationController is that ReplicaSet supports set-based selectors, while ReplicationController supports equality-based selectors. ReplicaSets are the recommended way to manage replicas in modern Kubernetes deployments.",
  ],
  [
    "What is the difference between a Kubernetes DaemonSet and a Deployment?",
    [
      "DaemonSet runs a Pod on every node, and Deployment runs multiple replicas of a Pod",
      "t",
    ],
    [
      "DaemonSet runs multiple replicas of a Pod, and Deployment runs a Pod on every node",
      "f",
    ],
    [
      "DaemonSet is for stateless applications, and Deployment is for stateful applications",
      "f",
    ],
    [
      "DaemonSet is for long-running containers, and Deployment is for short-lived containers",
      "f",
    ],
    "The difference between a Kubernetes DaemonSet and a Deployment is that DaemonSet ensures a Pod runs on every node in the cluster, while Deployment is used to manage multiple replicas of a Pod across the cluster.",
  ],
  [
    "What is the purpose of a Kubernetes Service?",
    ["Expose applications running on a set of Pods", "t"],
    ["Run containerized applications", "f"],
    ["Expose the Kubernetes API", "f"],
    ["Automatically scale the number of Pods", "f"],
    "The purpose of a Kubernetes Service is to expose applications running on a set of Pods, providing a stable IP address and DNS name, and load balancing traffic among the Pods.",
  ],
  [
    "What is the purpose of a Kubernetes Namespace?",
    ["Group and isolate resources within a cluster", "t"],
    ["Run containerized applications", "f"],
    ["Expose the Kubernetes API", "f"],
    ["Automatically scale the number of Pods", "f"],
    "The purpose of a Kubernetes Namespace is to group and isolate resources within a cluster, providing a scope for names and allowing multiple teams or projects to share a cluster without conflicts.",
  ],
  [
    "What is the purpose of Kubernetes Labels?",
    ["Attach metadata to objects for identification and selection", "t"],
    ["Run containerized applications", "f"],
    ["Expose the Kubernetes API", "f"],
    ["Automatically scale the number of Pods", "f"],
    "The purpose of Kubernetes Labels is to attach metadata to objects for identification and selection, allowing you to group, filter, and organize resources based on their labels.",
  ],
  [
    "What is the purpose of Kubernetes Annotations?",
    ["Attach arbitrary non-identifying metadata to objects", "t"],
    ["Run containerized applications", "f"],
    ["Expose the Kubernetes API", "f"],
    ["Automatically scale the number of Pods", "f"],
    "The purpose of Kubernetes Annotations is to attach arbitrary non-identifying metadata to objects, providing a way to store additional information that may be used by external tools or libraries.",
  ],
];
